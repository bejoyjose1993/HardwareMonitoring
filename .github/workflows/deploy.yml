name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push edgemonitor-backend image
      run: |
        docker build -t bejoyjose/edgemonitor_backend ./edgemonitor-backend
        docker push bejoyjose/edgemonitor_backend:latest

    - name: Build and push edgemonitor_gateway image
      run: |
        docker build -t bejoyjose/edgemonitor_gateway ./edgemonitor-gateway
        docker push bejoyjose/edgemonitor_gateway:latest

    - name: Build and push edgemonitor_notification service image
      run: |
        docker build -t bejoyjose/edgemonitor_notification ./edgemonitor-notification
        docker push bejoyjose/edgemonitor_notification:latest

    - name: Build and push edge_monitor service image
      run: |
        docker build -t bejoyjose/edge_monitor ./edge_monitor
        docker push bejoyjose/edge_monitor:latest

    - name: Build and push edge_monitor_dashboard image
      run: |
        docker build \
          --build-arg BASE_API_URL=${{ secrets.BASE_API_URL }} \
          --build-arg FAST_BASE_API_URL=${{ secrets.FAST_BASE_API_URL }} \
          -t bejoyjose/edge_monitor_dashboard ./edge_monitor_dashboard
        docker push bejoyjose/edge_monitor_dashboard:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull bejoyjose/edgemonitor_backend:latest
          docker pull bejoyjose/edgemonitor_gateway:latest
          docker pull bejoyjose/edgemonitor_notification:latest
          docker pull bejoyjose/edgemonitor_dashboard:latest
          cd /home/ec2-user/car-renal-app
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml --env-file .env.production pull
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml --env-file .env.production down
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml --env-file .env.production up -d
          docker image prune -a -f
