services:
  mysql:
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d  # Optional: to import .sql file

  redis:
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_HOST=${REDIS_HOST}   
  
  zookeeper:
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
  edgemonitor_backend:
    build: ./edgemonitor-backend
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"


  edgemonitor_dashboard:
    build:
      context: ./edge_monitor_dashboard
      args:
        - BASE_API_URL=${BASE_API_URL}
        - FAST_BASE_API_URL=${FAST_BASE_API_URL}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}

  edgemonitor_gateway:
    build: ./edgemonitor-gateway
    environment:
      - APP_CORS_ALLOWED_ORIGINS=${APP_CORS_ALLOWED_ORIGINS}
      - GATEWAY_SERVICE_URI=${GATEWAY_SERVICE_URI}
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"

  edgemonitor_notification:
    build: ./edgemonitor-notification
    container_name: edgemonitor_notification
    ports:
      - "${NOTIFICATION_PORT}:${NOTIFICATION_PORT}"
    environment:
        - MAIL_USERNAME=${MAIL_USERNAME}
        - MAIL_PASSWORD=${MAIL_PASSWORD}
        - SPRING_PROFILES_ACTIVE=docker
        - NOTIFICATION_PORT=${NOTIFICATION_PORT}
        - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}

  edge_monitor:
    build:
      context: ./edge_monitor
    container_name: edge_monitor
    ports:
      - "${EDGE_MONITOR_PORT}:${EDGE_MONITOR_PORT}" 
    environment:
      - TRANSPORT=${EDGE_MONITOR_TRANSPORT}
      - ENDPOINT=${EDGE_MONITOR_ENDPOINT}
      - INTERVAL=${EDGE_MONITOR_INTERVAL}
      - SERVER_PORT=${EDGE_MONITOR_PORT}
